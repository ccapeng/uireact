{"version":3,"sources":["UIList.js","components/Dashboard.js","components/UI.js","components/Main.js","serviceWorker.js","index.js"],"names":["UIList","name","ui","link","items","title","url","Dashboard","s","i","length","push","react_default","a","createElement","key","className","Link","to","concat","this","createList","Component","UI","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","uiID","match","params","comp","uiComp","uiName","uiKey","u","fetch","then","response","text","html","document","getElementById","innerHTML","len","item","id","getItemContent","getItems","Main","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","href","components_Main","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5484eafe.chunk.js","sourcesContent":["const UIList = [\n  { name: 'Avatar', ui: 'avatar', link : \"true\",\n    items :[\n      {\n        title: \"Icon\",\n        url: \"assets/tpls/components/avatar/avatar-icon-md.html\"\n      },\n      {\n        title: \"Image\",\n        url: \"assets/tpls/components/avatar/avatar-img-md.html\"\n      }\n    ]\n  },\n  { name: 'Breacrumb', ui: 'breadcrumb', link : \"true\",\n    items :[\n      {\n        title: \"Breadcrumb\",\n        url: \"assets/tpls/components/breadcrumb/breadcrumb-base.html\"\n      }\n    ]\n  },\n  { name: 'Button', ui: 'button', link : \"true\",\n    items :[\n      {\n        title: \"Primary and Regular Buttons\",\n        url: \"assets/tpls/components/button/button-regular.html\"\n      },\n      {\n        title: \"Hyper Link as Button\",\n        url: \"assets/tpls/components/button/button-link.html\"\n      },\n      {\n        title: \"Large Button\",\n        url: \"assets/tpls/components/button/button-large.html\"\n      },\n      {\n        title: \"Small Button/ Intermediate Action\",\n        url: \"assets/tpls/components/button/button-small.html\"\n      },\n      {\n        title: \"Text Button\",\n        url: \"assets/tpls/components/button/button-text.html\"\n      },\n      {\n        title: \"Button Icons\",\n        url: \"assets/tpls/components/button/button-icon.html\"\n      },\n      {\n        title: \"Button Group\",\n        url: \"assets/tpls/components/button/button-group.html\"\n      },\n      {\n        title: \"Split Button\",\n        url: \"assets/tpls/components/button/button-split.html\"\n      },\n      {\n        title: \"Toolbar Buttons\",\n        url: \"assets/tpls/components/toolbar/toolbar-button.html\"\n      },\n      {\n        title: \"Ripple Effect\",\n        url: \"assets/tpls/components/button/button-ripple-effect.html\"\n      },\n      {\n        title: \"Submitting\",\n        url: \"assets/tpls/components/button/button-submitting.html\"\n      }      \n    ]\n  },\n  { name: 'Badge', ui: 'badge'},\n  { name: 'Panel', ui: 'panel'},\n  { name: 'Card', ui: 'card'},\n  { name: 'Date Picker', ui: 'datapicker'},\n  { name: 'Definition List', ui: 'definition'},\n  { name: 'Dropdown', ui: 'drowdown'},\n  { name: 'Flex Layout', ui: 'flex'},\n  { name: 'Font Icon', ui: 'fonticon'},\n  { name: 'From', ui: 'form'},\n  { name: 'Grid', ui: 'grid'},\n  { name: 'Heading', ui: 'heading'},\n  { name: 'List', ui: 'list'},\n  { name: 'List - data', ui: 'datalist'},\n  { name: 'Loading', ui: 'loading'},\n  { name: 'Message', ui: 'messages'},\n  { name: 'Modal', ui: 'modal'},\n  { name: 'Note', ui: 'note'},\n  { name: 'Popover', ui: 'popover'},\n  { name: 'Progress', ui: 'progress'},\n  { name: 'Pagination', ui: 'Pagination'},\n  { name: 'Switch', ui: 'switch'},\n  { name: 'Search', ui: 'search'},\n  { name: 'Separator', ui: 'separator'},\n  { name: 'Slide-out', ui: 'aside'},\n  { name: 'Space', ui: 'space'},\n  { name: 'Table', ui: 'table'},\n  { name: 'Tabs', ui: 'tabs'},\n  { name: 'Toggle', ui: 'toggle'},\n  { name: 'Toolbar', ui: 'toolbar'},\n  { name: 'Tooltips', ui: 'tooltips'},\n  { name: 'Text Label', ui: 'textlabel'},\n];\n\nexport default UIList;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport UIList from '../UIList.js';\r\n\r\nclass Dashboard extends Component {\r\n\r\n  createList(){\r\n    var s = [];\r\n    for (let i=0; i< UIList.length; i++) {\r\n      let name = UIList[i].name;\r\n      let link = UIList[i].link;\r\n      let ui = UIList[i].ui;\r\n      if(link != null) {\r\n        s.push(\r\n          <li key={ui} className=\"col-md-3 col-sm-12\">\r\n            <Link to={`ui/${ui}`}>\r\n              {name}\r\n            </Link>\r\n          </li>\r\n        )\r\n      } else {\r\n        s.push(\r\n          <li key={ui} className=\"col-md-3 col-sm-12\">\r\n            {name}\r\n          </li>\r\n        )\r\n      }\r\n    }\r\n    return s;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section>\r\n        <h2 className=\"cc-h\">Components</h2>\r\n        <div className=\"cc-section-panel cc-panel cc-panel-body cc-panel-border\">\r\n          <div className=\"cc-indent-lg\">\r\n            <ul className=\"cc-list row cc-flex-list\">\r\n              {this.createList()}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport UIList from '../UIList.js'\r\n\r\n\r\nclass UI extends Component {\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.uiID = props.match.params.ui;\r\n    for (var i=0;i<UIList.length;i++) {\r\n        var comp = UIList[i];\r\n        if (comp.ui == this.uiID) {\r\n          this.uiComp = comp;\r\n          this.uiName = comp.name;\r\n          break;\r\n        }\r\n      }\r\n  }\r\n  \r\n  getItemContent(uiKey, u) {\r\n    fetch(u)\r\n    .then(\r\n      function(response) {\r\n        return response.text();\r\n      }\r\n    ).then(function(html){\r\n      document.getElementById(uiKey).innerHTML = html;\r\n    })\r\n  }\r\n\r\n  getItems() {\r\n\r\n    var s = [];\r\n    var len = this.uiComp.items.length;\r\n    for (let i=0; i<len; i++) {\r\n      let item = this.uiComp.items[i];\r\n      let title = item.title;\r\n      let url = \"/\"+item.url;\r\n      let uiKey = this.uiID + i;\r\n      s.push(\r\n        <div className=\"cc-section cc-panel\" key={uiKey}>\r\n          <h2 className=\"cc-h cc-panel-header\">{title}</h2>\r\n          <div className=\"cc-panel-body\" id={uiKey}>\r\n            {this.getItemContent(uiKey,url)}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    return s;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"cc-section\">\r\n        <div className=\"cc-h-area\">\r\n          <h1 className=\"cc-h\">{ this.uiName }</h1>\r\n        </div>\r\n        {this.getItems()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UI","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\nimport Dashboard from './Dashboard'\r\nimport UI from './UI'\r\n\r\nclass Main extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n      <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path='/' component={Dashboard}/>\r\n        <Route path='/ui/:ui' component={UI}/>\r\n      </Switch>\r\n      </BrowserRouter>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Main","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom'\n\nimport Main from './components/Main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render((\n    <div>\n      <div className=\"cc-h-area cc-shade3 cc-nav\">\n        <div className=\"container cc-padding\">\n          <h1 className=\"cc-h cc-inline\">\n            <a href=\"/\">tccui</a>\n          </h1>\n        </div>\n      </div>\n      <div className=\"cc-body\">\n        <div className=\"container\" id=\"container\">\n          <Main></Main>\n        </div>\n      </div>\n    </div>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}